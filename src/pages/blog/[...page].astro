---
import { getCollection } from 'astro:content';
import Layout from '../../layouts/Layout.astro';
import PostImage from '../../components/PostImage.astro';

export async function getStaticPaths({ paginate }) {
  const blogPosts = await getCollection('blog');
  const pillarPages = await getCollection('pillars');

  // Combine blog posts and pillar pages
  const allContent = [
    ...blogPosts,
    ...pillarPages.map(pillar => ({
      ...pillar,
      data: {
        ...pillar.data,
        pubDate: new Date(0), // Set pillar content to appear at the top
        type: 'pillar'
      }
    }))
  ];

  // Sort combined content by date
  const sortedContent = allContent.sort((a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf());
  
  return paginate(sortedContent, { pageSize: 10 });
}

const { page } = Astro.props;
---

<Layout title="Blog" currentPage="/blog">
  <main>
    <h1>Blog Posts</h1>
    <div class="blog-grid">
      {page.data.map((post) => (
        <article class={`blog-card ${post.data.type === 'pillar' ? 'pillar' : ''}`}>
          <a href={`/blog/${post.slug}`}>
            <PostImage 
              src={post.data.image} 
              alt={post.data.title}
              className="card-image"
            />
            <div class="content">
              {post.data.type === 'pillar' && <span class="pillar-badge">Guide</span>}
              <h2>{post.data.title}</h2>
              {post.data.type !== 'pillar' && (
                <p class="date">{post.data.pubDate.toLocaleDateString('en-US', {
                  year: 'numeric',
                  month: 'long',
                  day: 'numeric'
                })}</p>
              )}
              <p class="description">{post.data.description}</p>
            </div>
          </a>
        </article>
      ))}
    </div>

    <nav class="pagination">
      {page.url.prev && <a href={page.url.prev}>← Previous</a>}
      {page.url.next && <a href={page.url.next}>Next →</a>}
    </nav>
  </main>
</Layout>

<style>
  main {
    max-width: 1200px;
    margin: 0 auto;
    padding: 2rem;
  }
  h1 {
    font-size: 2.5rem;
    margin-bottom: 2rem;
    text-align: center;
  }
  .blog-grid {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
    gap: 2rem;
    margin-bottom: 2rem;
  }
  .blog-card {
    background: white;
    border-radius: 10px;
    overflow: hidden;
    box-shadow: 0 4px 6px rgba(0,0,0,0.1);
    transition: transform 0.3s ease;
    position: relative;
  }
  .blog-card:hover {
    transform: translateY(-5px);
  }
  .blog-card a {
    text-decoration: none;
    color: inherit;
  }
  .card-image {
    width: 100%;
    height: 200px;
    object-fit: cover;
  }
  .content {
    padding: 1.5rem;
  }
  h2 {
    font-size: 1.4rem;
    margin-bottom: 0.5rem;
    color: var(--accent-dark);
  }
  .date {
    font-size: 0.9rem;
    color: #666;
    margin-bottom: 0.5rem;
  }
  .description {
    font-size: 1rem;
    color: #333;
  }
  .pagination {
    display: flex;
    justify-content: center;
    gap: 2rem;
    margin-top: 2rem;
  }
  .pagination a {
    padding: 0.5rem 1rem;
    background: var(--accent);
    color: white;
    border-radius: 5px;
    text-decoration: none;
    transition: background 0.3s ease;
  }
  .pagination a:hover {
    background: var(--accent-dark);
  }
  .pillar-badge {
    position: absolute;
    top: 1rem;
    right: 1rem;
    background: var(--accent);
    color: white;
    padding: 0.25rem 0.75rem;
    border-radius: 1rem;
    font-size: 0.8rem;
    font-weight: bold;
  }
  .pillar {
    border: 2px solid var(--accent);
  }
  @media (max-width: 768px) {
    .blog-grid {
      grid-template-columns: 1fr;
    }
  }
</style>